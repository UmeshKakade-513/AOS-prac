#include <stdio.h>
#include <sys/stat.h>
#include <unistd.h>

void print_file_info(const char *filename) {
    struct stat fileStat;

    // Get file information
    if (stat(filename, &fileStat) == -1) {
        perror("Error getting file information");
        return;
    }

    // Print inode number
    printf("File: %s\n", filename);
    printf("Inode: %ld\n", (long)fileStat.st_ino);

    // Determine and print file type
    printf("File Type: ");
    if (S_ISREG(fileStat.st_mode))
        printf("Regular File\n");
    else if (S_ISDIR(fileStat.st_mode))
        printf("Directory\n");
    else if (S_ISCHR(fileStat.st_mode))
        printf("Character Device\n");
    else if (S_ISBLK(fileStat.st_mode))
        printf("Block Device\n");
    else if (S_ISFIFO(fileStat.st_mode))
        printf("FIFO (Named Pipe)\n");
    else if (S_ISLNK(fileStat.st_mode))
        printf("Symbolic Link\n");
    else if (S_ISSOCK(fileStat.st_mode))
        printf("Socket\n");
    else
        printf("Unknown Type\n");

    printf("\n");
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        fprintf(stderr, "Usage: %s <file1> <file2> ... <fileN>\n", argv[0]);
        return 1;
    }

    // Loop through each file provided as a command-line argument
    for (int i = 1; i < argc; i++) {
        print_file_info(argv[i]);
    }

    return 0;
}
